"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/messages/page",{

/***/ "(app-pages-browser)/./src/lib/AppContext.tsx":
/*!********************************!*\
  !*** ./src/lib/AppContext.tsx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppProvider: function() { return /* binding */ AppProvider; },\n/* harmony export */   useAppContext: function() { return /* binding */ useAppContext; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ AppProvider,useAppContext auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n// Initial state\nconst initialState = {\n    currentPage: \"home\",\n    activeFilters: new Set(),\n    products: [],\n    filteredProducts: [],\n    basket: [],\n    messages: [],\n    receipts: [],\n    orders: [],\n    savedFilters: [],\n    notifications: []\n};\n// Reducer\nfunction appReducer(state, action) {\n    switch(action.type){\n        case \"SET_CURRENT_PAGE\":\n            return {\n                ...state,\n                currentPage: action.payload\n            };\n        case \"SET_PRODUCTS\":\n            return {\n                ...state,\n                products: action.payload,\n                filteredProducts: action.payload\n            };\n        case \"SET_FILTERED_PRODUCTS\":\n            return {\n                ...state,\n                filteredProducts: action.payload\n            };\n        case \"ADD_FILTER\":\n            const newFilters = new Set(state.activeFilters);\n            newFilters.add(action.payload);\n            return {\n                ...state,\n                activeFilters: newFilters\n            };\n        case \"REMOVE_FILTER\":\n            const updatedFilters = new Set(state.activeFilters);\n            updatedFilters.delete(action.payload);\n            return {\n                ...state,\n                activeFilters: updatedFilters\n            };\n        case \"CLEAR_FILTERS\":\n            return {\n                ...state,\n                activeFilters: new Set()\n            };\n        case \"ADD_TO_BASKET\":\n            const existingItem = state.basket.find((item)=>item.title === action.payload.title);\n            if (existingItem) {\n                return {\n                    ...state,\n                    basket: state.basket.map((item)=>item.id === existingItem.id ? {\n                            ...item,\n                            quantity: item.quantity + 1\n                        } : item)\n                };\n            }\n            return {\n                ...state,\n                basket: [\n                    ...state.basket,\n                    action.payload\n                ]\n            };\n        case \"REMOVE_FROM_BASKET\":\n            return {\n                ...state,\n                basket: state.basket.filter((item)=>item.id !== action.payload)\n            };\n        case \"UPDATE_ITEM_QUANTITY\":\n            if (action.payload.quantity <= 0) {\n                return {\n                    ...state,\n                    basket: state.basket.filter((item)=>item.id !== action.payload.id)\n                };\n            }\n            return {\n                ...state,\n                basket: state.basket.map((item)=>item.id === action.payload.id ? {\n                        ...item,\n                        quantity: action.payload.quantity\n                    } : item)\n            };\n        case \"ADD_MESSAGE\":\n            return {\n                ...state,\n                messages: [\n                    ...state.messages,\n                    action.payload\n                ]\n            };\n        case \"DELETE_MESSAGE\":\n            return {\n                ...state,\n                messages: state.messages.filter((msg)=>msg.id !== action.payload)\n            };\n        case \"ADD_RECEIPT\":\n            return {\n                ...state,\n                receipts: [\n                    ...state.receipts,\n                    action.payload\n                ]\n            };\n        case \"ADD_ORDER\":\n            return {\n                ...state,\n                orders: [\n                    ...state.orders,\n                    action.payload\n                ]\n            };\n        case \"UPDATE_ORDER_STATUS\":\n            return {\n                ...state,\n                orders: state.orders.map((order)=>order.id === action.payload.id ? {\n                        ...order,\n                        status: action.payload.status\n                    } : order)\n            };\n        case \"ADD_SAVED_FILTER\":\n            return {\n                ...state,\n                savedFilters: [\n                    ...state.savedFilters,\n                    action.payload\n                ]\n            };\n        case \"UPDATE_SAVED_FILTER\":\n            return {\n                ...state,\n                savedFilters: state.savedFilters.map((filter)=>filter.id === action.payload.id ? {\n                        ...filter,\n                        ...action.payload.updates\n                    } : filter)\n            };\n        case \"DELETE_SAVED_FILTER\":\n            return {\n                ...state,\n                savedFilters: state.savedFilters.filter((filter)=>filter.id !== action.payload)\n            };\n        case \"ADD_NOTIFICATION\":\n            return {\n                ...state,\n                notifications: [\n                    action.payload,\n                    ...state.notifications\n                ]\n            };\n        case \"MARK_NOTIFICATION_READ\":\n            return {\n                ...state,\n                notifications: state.notifications.map((notification)=>notification.id === action.payload ? {\n                        ...notification,\n                        read: true\n                    } : notification)\n            };\n        case \"DELETE_NOTIFICATION\":\n            return {\n                ...state,\n                notifications: state.notifications.filter((notification)=>notification.id !== action.payload)\n            };\n        case \"CLEAR_ALL_NOTIFICATIONS\":\n            return {\n                ...state,\n                notifications: []\n            };\n        case \"LOAD_STATE\":\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n}\n// Context\nconst AppContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\n// Provider component\nfunction AppProvider(param) {\n    let { children } = param;\n    _s();\n    const [state, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(appReducer, initialState);\n    // Load products on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadProducts = async ()=>{\n            try {\n                const response = await fetch(\"/api/products\");\n                const data = await response.json();\n                // Transform JSON data to match our application structure\n                const products = data.products.map((product)=>{\n                    var _product_category;\n                    return {\n                        id: \"product-\".concat(product.id),\n                        title: product.title || \"\",\n                        region: product.region || \"\",\n                        material: product.material || \"\",\n                        category: product.category || \"\",\n                        price: \"\".concat(product.price, \"kr/\").concat(product.unit),\n                        unit: product.unit || \"\",\n                        condition: product.condition || \"\",\n                        image: product.image || \"\",\n                        supplier: product.supplier || \"\",\n                        weight: \"\".concat(Math.floor(Math.random() * 5) + 0.5, \" tonn\"),\n                        thickness: \"\".concat(Math.floor(Math.random() * 20) + 5, \"mm\"),\n                        length: \"\".concat(Math.floor(Math.random() * 1000) + 500, \" mm\"),\n                        width: \"\".concat(Math.floor(Math.random() * 300) + 100, \" mm\"),\n                        availability: \"\".concat(Math.floor(Math.random() * 200) + 50, \" \").concat(product.unit, \" tilgjengelig\"),\n                        description: \"Gjenbrukt \".concat(((_product_category = product.category) === null || _product_category === void 0 ? void 0 : _product_category.toLowerCase()) || \"materiale\", \" fra ombruksanlegg i \").concat(product.region || \"Norge\", \". \").concat(product.condition || \"Brukt\", \". Materialet er perfekt for b\\xe6rekraftige byggeprosjekter.\"),\n                        origin: \"Fra \".concat(product.supplier || \"Lokal leverand\\xf8r\", \" - \").concat(product.condition || \"Brukt\")\n                    };\n                });\n                dispatch({\n                    type: \"SET_PRODUCTS\",\n                    payload: products\n                });\n            } catch (error) {\n                console.error(\"Error loading products:\", error);\n            }\n        };\n        loadProducts();\n    }, []);\n    // Load state from localStorage on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (true) {\n            const savedState = localStorage.getItem(\"byggOm_state\");\n            if (savedState) {\n                try {\n                    const parsedState = JSON.parse(savedState);\n                    // Convert arrays back to Sets for filters\n                    if (parsedState.activeFilters) {\n                        parsedState.activeFilters = new Set(parsedState.activeFilters);\n                    }\n                    dispatch({\n                        type: \"LOAD_STATE\",\n                        payload: parsedState\n                    });\n                } catch (error) {\n                    console.error(\"Error loading saved state:\", error);\n                }\n            }\n        }\n    }, []);\n    // Save state to localStorage whenever it changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (true) {\n            const stateToSave = {\n                ...state,\n                activeFilters: Array.from(state.activeFilters)\n            };\n            localStorage.setItem(\"byggOm_state\", JSON.stringify(stateToSave));\n        }\n    }, [\n        state\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AppContext.Provider, {\n        value: {\n            state,\n            dispatch\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/patchayawonghathep/Documents/GitHub/high-fidelity-1600/src/lib/AppContext.tsx\",\n        lineNumber: 265,\n        columnNumber: 5\n    }, this);\n}\n_s(AppProvider, \"s3jE+e7wLGXN/2uWqdAG2uRSMfA=\");\n_c = AppProvider;\n// Hook to use the context\nfunction useAppContext() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AppContext);\n    if (!context) {\n        throw new Error(\"useAppContext must be used within an AppProvider\");\n    }\n    return context;\n}\n_s1(useAppContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvQXBwQ29udGV4dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUVnRjtBQUdoRixnQkFBZ0I7QUFDaEIsTUFBTUssZUFBeUI7SUFDN0JDLGFBQWE7SUFDYkMsZUFBZSxJQUFJQztJQUNuQkMsVUFBVSxFQUFFO0lBQ1pDLGtCQUFrQixFQUFFO0lBQ3BCQyxRQUFRLEVBQUU7SUFDVkMsVUFBVSxFQUFFO0lBQ1pDLFVBQVUsRUFBRTtJQUNaQyxRQUFRLEVBQUU7SUFDVkMsY0FBYyxFQUFFO0lBQ2hCQyxlQUFlLEVBQUU7QUFDbkI7QUEyQkEsVUFBVTtBQUNWLFNBQVNDLFdBQVdDLEtBQWUsRUFBRUMsTUFBaUI7SUFDcEQsT0FBUUEsT0FBT0MsSUFBSTtRQUNqQixLQUFLO1lBQ0gsT0FBTztnQkFBRSxHQUFHRixLQUFLO2dCQUFFWixhQUFhYSxPQUFPRSxPQUFPO1lBQUM7UUFFakQsS0FBSztZQUNILE9BQU87Z0JBQ0wsR0FBR0gsS0FBSztnQkFDUlQsVUFBVVUsT0FBT0UsT0FBTztnQkFDeEJYLGtCQUFrQlMsT0FBT0UsT0FBTztZQUNsQztRQUVGLEtBQUs7WUFDSCxPQUFPO2dCQUFFLEdBQUdILEtBQUs7Z0JBQUVSLGtCQUFrQlMsT0FBT0UsT0FBTztZQUFDO1FBRXRELEtBQUs7WUFDSCxNQUFNQyxhQUFhLElBQUlkLElBQUlVLE1BQU1YLGFBQWE7WUFDOUNlLFdBQVdDLEdBQUcsQ0FBQ0osT0FBT0UsT0FBTztZQUM3QixPQUFPO2dCQUFFLEdBQUdILEtBQUs7Z0JBQUVYLGVBQWVlO1lBQVc7UUFFL0MsS0FBSztZQUNILE1BQU1FLGlCQUFpQixJQUFJaEIsSUFBSVUsTUFBTVgsYUFBYTtZQUNsRGlCLGVBQWVDLE1BQU0sQ0FBQ04sT0FBT0UsT0FBTztZQUNwQyxPQUFPO2dCQUFFLEdBQUdILEtBQUs7Z0JBQUVYLGVBQWVpQjtZQUFlO1FBRW5ELEtBQUs7WUFDSCxPQUFPO2dCQUFFLEdBQUdOLEtBQUs7Z0JB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LE1BQU1DLElBQUksQ0FBQzdELE1BQU1YLGFBQWE7WUFDL0M7WUFDQWlFLGFBQWFRLE9BQU8sQ0FBQyxnQkFBZ0JMLEtBQUtNLFNBQVMsQ0FBQ0o7UUFDdEQ7SUFDRixHQUFHO1FBQUMzRDtLQUFNO0lBRVYscUJBQ0UsOERBQUNzQixXQUFXMEMsUUFBUTtRQUFDQyxPQUFPO1lBQUVqRTtZQUFPeUI7UUFBUztrQkFDM0NEOzs7Ozs7QUFHUDtHQTNFZ0JEO0tBQUFBO0FBNkVoQiwwQkFBMEI7QUFDbkIsU0FBUzJDOztJQUNkLE1BQU1DLFVBQVVuRixpREFBVUEsQ0FBQ3NDO0lBQzNCLElBQUksQ0FBQzZDLFNBQVM7UUFDWixNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFDQSxPQUFPRDtBQUNUO0lBTmdCRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbGliL0FwcENvbnRleHQudHN4P2UxZTkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlUmVkdWNlciwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQXBwU3RhdGUsIFByb2R1Y3QsIEJhc2tldEl0ZW0sIE1lc3NhZ2UsIFJlY2VpcHQsIE9yZGVyLCBTYXZlZEZpbHRlciwgTm90aWZpY2F0aW9uIH0gZnJvbSAnQC90eXBlcyc7XG5cbi8vIEluaXRpYWwgc3RhdGVcbmNvbnN0IGluaXRpYWxTdGF0ZTogQXBwU3RhdGUgPSB7XG4gIGN1cnJlbnRQYWdlOiAnaG9tZScsXG4gIGFjdGl2ZUZpbHRlcnM6IG5ldyBTZXQoKSxcbiAgcHJvZHVjdHM6IFtdLFxuICBmaWx0ZXJlZFByb2R1Y3RzOiBbXSxcbiAgYmFza2V0OiBbXSxcbiAgbWVzc2FnZXM6IFtdLFxuICByZWNlaXB0czogW10sXG4gIG9yZGVyczogW10sXG4gIHNhdmVkRmlsdGVyczogW10sXG4gIG5vdGlmaWNhdGlvbnM6IFtdXG59O1xuXG4vLyBBY3Rpb24gdHlwZXNcbnR5cGUgQXBwQWN0aW9uID0gXG4gIHwgeyB0eXBlOiAnU0VUX0NVUlJFTlRfUEFHRSc7IHBheWxvYWQ6IHN0cmluZyB9XG4gIHwgeyB0eXBlOiAnU0VUX1BST0RVQ1RTJzsgcGF5bG9hZDogUHJvZHVjdFtdIH1cbiAgfCB7IHR5cGU6ICdTRVRfRklMVEVSRURfUFJPRFVDVFMnOyBwYXlsb2FkOiBQcm9kdWN0W10gfVxuICB8IHsgdHlwZTogJ0FERF9GSUxURVInOyBwYXlsb2FkOiBzdHJpbmcgfVxuICB8IHsgdHlwZTogJ1JFTU9WRV9GSUxURVInOyBwYXlsb2FkOiBzdHJpbmcgfVxuICB8IHsgdHlwZTogJ0NMRUFSX0ZJTFRFUlMnIH1cbiAgfCB7IHR5cGU6ICdBRERfVE9fQkFTS0VUJzsgcGF5bG9hZDogQmFza2V0SXRlbSB9XG4gIHwgeyB0eXBlOiAnUkVNT1ZFX0ZST01fQkFTS0VUJzsgcGF5bG9hZDogbnVtYmVyIH1cbiAgfCB7IHR5cGU6ICdVUERBVEVfSVRFTV9RVUFOVElUWSc7IHBheWxvYWQ6IHsgaWQ6IG51bWJlcjsgcXVhbnRpdHk6IG51bWJlciB9IH1cbiAgfCB7IHR5cGU6ICdBRERfTUVTU0FHRSc7IHBheWxvYWQ6IE1lc3NhZ2UgfVxuICB8IHsgdHlwZTogJ0RFTEVURV9NRVNTQUdFJzsgcGF5bG9hZDogbnVtYmVyIH1cbiAgfCB7IHR5cGU6ICdBRERfUkVDRUlQVCc7IHBheWxvYWQ6IFJlY2VpcHQgfVxuICB8IHsgdHlwZTogJ0FERF9PUkRFUic7IHBheWxvYWQ6IE9yZGVyIH1cbiAgfCB7IHR5cGU6ICdVUERBVEVfT1JERVJfU1RBVFVTJzsgcGF5bG9hZDogeyBpZDogc3RyaW5nOyBzdGF0dXM6IE9yZGVyWydzdGF0dXMnXSB9IH1cbiAgfCB7IHR5cGU6ICdBRERfU0FWRURfRklMVEVSJzsgcGF5bG9hZDogU2F2ZWRGaWx0ZXIgfVxuICB8IHsgdHlwZTogJ1VQREFURV9TQVZFRF9GSUxURVInOyBwYXlsb2FkOiB7IGlkOiBzdHJpbmc7IHVwZGF0ZXM6IFBhcnRpYWw8U2F2ZWRGaWx0ZXI+IH0gfVxuICB8IHsgdHlwZTogJ0RFTEVURV9TQVZFRF9GSUxURVInOyBwYXlsb2FkOiBzdHJpbmcgfVxuICB8IHsgdHlwZTogJ0FERF9OT1RJRklDQVRJT04nOyBwYXlsb2FkOiBOb3RpZmljYXRpb24gfVxuICB8IHsgdHlwZTogJ01BUktfTk9USUZJQ0FUSU9OX1JFQUQnOyBwYXlsb2FkOiBzdHJpbmcgfVxuICB8IHsgdHlwZTogJ0RFTEVURV9OT1RJRklDQVRJT04nOyBwYXlsb2FkOiBzdHJpbmcgfVxuICB8IHsgdHlwZTogJ0NMRUFSX0FMTF9OT1RJRklDQVRJT05TJyB9XG4gIHwgeyB0eXBlOiAnTE9BRF9TVEFURSc7IHBheWxvYWQ6IFBhcnRpYWw8QXBwU3RhdGU+IH07XG5cbi8vIFJlZHVjZXJcbmZ1bmN0aW9uIGFwcFJlZHVjZXIoc3RhdGU6IEFwcFN0YXRlLCBhY3Rpb246IEFwcEFjdGlvbik6IEFwcFN0YXRlIHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgJ1NFVF9DVVJSRU5UX1BBR0UnOlxuICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsIGN1cnJlbnRQYWdlOiBhY3Rpb24ucGF5bG9hZCB9O1xuICAgIFxuICAgIGNhc2UgJ1NFVF9QUk9EVUNUUyc6XG4gICAgICByZXR1cm4geyBcbiAgICAgICAgLi4uc3RhdGUsIFxuICAgICAgICBwcm9kdWN0czogYWN0aW9uLnBheWxvYWQsXG4gICAgICAgIGZpbHRlcmVkUHJvZHVjdHM6IGFjdGlvbi5wYXlsb2FkIFxuICAgICAgfTtcbiAgICBcbiAgICBjYXNlICdTRVRfRklMVEVSRURfUFJPRFVDVFMnOlxuICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsIGZpbHRlcmVkUHJvZHVjdHM6IGFjdGlvbi5wYXlsb2FkIH07XG4gICAgXG4gICAgY2FzZSAnQUREX0ZJTFRFUic6XG4gICAgICBjb25zdCBuZXdGaWx0ZXJzID0gbmV3IFNldChzdGF0ZS5hY3RpdmVGaWx0ZXJzKTtcbiAgICAgIG5ld0ZpbHRlcnMuYWRkKGFjdGlvbi5wYXlsb2FkKTtcbiAgICAgIHJldHVybiB7IC4uLnN0YXRlLCBhY3RpdmVGaWx0ZXJzOiBuZXdGaWx0ZXJzIH07XG4gICAgXG4gICAgY2FzZSAnUkVNT1ZFX0ZJTFRFUic6XG4gICAgICBjb25zdCB1cGRhdGVkRmlsdGVycyA9IG5ldyBTZXQoc3RhdGUuYWN0aXZlRmlsdGVycyk7XG4gICAgICB1cGRhdGVkRmlsdGVycy5kZWxldGUoYWN0aW9uLnBheWxvYWQpO1xuICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsIGFjdGl2ZUZpbHRlcnM6IHVwZGF0ZWRGaWx0ZXJzIH07XG4gICAgXG4gICAgY2FzZSAnQ0xFQVJfRklMVEVSUyc6XG4gICAgICByZXR1cm4geyAuLi5zdGF0ZSwgYWN0aXZlRmlsdGVyczogbmV3IFNldCgpIH07XG4gICAgXG4gICAgY2FzZSAnQUREX1RPX0JBU0tFVCc6XG4gICAgICBjb25zdCBleGlzdGluZ0l0ZW0gPSBzdGF0ZS5iYXNrZXQuZmluZChpdGVtID0+IGl0ZW0udGl0bGUgPT09IGFjdGlvbi5wYXlsb2FkLnRpdGxlKTtcbiAgICAgIGlmIChleGlzdGluZ0l0ZW0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBiYXNrZXQ6IHN0YXRlLmJhc2tldC5tYXAoaXRlbSA9PlxuICAgICAgICAgICAgaXRlbS5pZCA9PT0gZXhpc3RpbmdJdGVtLmlkXG4gICAgICAgICAgICAgID8geyAuLi5pdGVtLCBxdWFudGl0eTogaXRlbS5xdWFudGl0eSArIDEgfVxuICAgICAgICAgICAgICA6IGl0ZW1cbiAgICAgICAgICApXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICByZXR1cm4geyAuLi5zdGF0ZSwgYmFza2V0OiBbLi4uc3RhdGUuYmFza2V0LCBhY3Rpb24ucGF5bG9hZF0gfTtcbiAgICBcbiAgICBjYXNlICdSRU1PVkVfRlJPTV9CQVNLRVQnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGJhc2tldDogc3RhdGUuYmFza2V0LmZpbHRlcihpdGVtID0+IGl0ZW0uaWQgIT09IGFjdGlvbi5wYXlsb2FkKVxuICAgICAgfTtcbiAgICBcbiAgICBjYXNlICdVUERBVEVfSVRFTV9RVUFOVElUWSc6XG4gICAgICBpZiAoYWN0aW9uLnBheWxvYWQucXVhbnRpdHkgPD0gMCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIGJhc2tldDogc3RhdGUuYmFza2V0LmZpbHRlcihpdGVtID0+IGl0ZW0uaWQgIT09IGFjdGlvbi5wYXlsb2FkLmlkKVxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGJhc2tldDogc3RhdGUuYmFza2V0Lm1hcChpdGVtID0+XG4gICAgICAgICAgaXRlbS5pZCA9PT0gYWN0aW9uLnBheWxvYWQuaWRcbiAgICAgICAgICAgID8geyAuLi5pdGVtLCBxdWFudGl0eTogYWN0aW9uLnBheWxvYWQucXVhbnRpdHkgfVxuICAgICAgICAgICAgOiBpdGVtXG4gICAgICAgIClcbiAgICAgIH07XG4gICAgXG4gICAgY2FzZSAnQUREX01FU1NBR0UnOlxuICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsIG1lc3NhZ2VzOiBbLi4uc3RhdGUubWVzc2FnZXMsIGFjdGlvbi5wYXlsb2FkXSB9O1xuICAgIFxuICAgIGNhc2UgJ0RFTEVURV9NRVNTQUdFJzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBtZXNzYWdlczogc3RhdGUubWVzc2FnZXMuZmlsdGVyKG1zZyA9PiBtc2cuaWQgIT09IGFjdGlvbi5wYXlsb2FkKVxuICAgICAgfTtcbiAgICBcbiAgICBjYXNlICdBRERfUkVDRUlQVCc6XG4gICAgICByZXR1cm4geyAuLi5zdGF0ZSwgcmVjZWlwdHM6IFsuLi5zdGF0ZS5yZWNlaXB0cywgYWN0aW9uLnBheWxvYWRdIH07XG4gICAgXG4gICAgY2FzZSAnQUREX09SREVSJzpcbiAgICAgIHJldHVybiB7IC4uLnN0YXRlLCBvcmRlcnM6IFsuLi5zdGF0ZS5vcmRlcnMsIGFjdGlvbi5wYXlsb2FkXSB9O1xuICAgIFxuICAgIGNhc2UgJ1VQREFURV9PUkRFUl9TVEFUVVMnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIG9yZGVyczogc3RhdGUub3JkZXJzLm1hcChvcmRlciA9PlxuICAgICAgICAgIG9yZGVyLmlkID09PSBhY3Rpb24ucGF5bG9hZC5pZFxuICAgICAgICAgICAgPyB7IC4uLm9yZGVyLCBzdGF0dXM6IGFjdGlvbi5wYXlsb2FkLnN0YXR1cyB9XG4gICAgICAgICAgICA6IG9yZGVyXG4gICAgICAgIClcbiAgICAgIH07XG4gICAgXG4gICAgY2FzZSAnQUREX1NBVkVEX0ZJTFRFUic6XG4gICAgICByZXR1cm4geyAuLi5zdGF0ZSwgc2F2ZWRGaWx0ZXJzOiBbLi4uc3RhdGUuc2F2ZWRGaWx0ZXJzLCBhY3Rpb24ucGF5bG9hZF0gfTtcbiAgICBcbiAgICBjYXNlICdVUERBVEVfU0FWRURfRklMVEVSJzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBzYXZlZEZpbHRlcnM6IHN0YXRlLnNhdmVkRmlsdGVycy5tYXAoZmlsdGVyID0+XG4gICAgICAgICAgZmlsdGVyLmlkID09PSBhY3Rpb24ucGF5bG9hZC5pZFxuICAgICAgICAgICAgPyB7IC4uLmZpbHRlciwgLi4uYWN0aW9uLnBheWxvYWQudXBkYXRlcyB9XG4gICAgICAgICAgICA6IGZpbHRlclxuICAgICAgICApXG4gICAgICB9O1xuICAgIFxuICAgIGNhc2UgJ0RFTEVURV9TQVZFRF9GSUxURVInOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIHNhdmVkRmlsdGVyczogc3RhdGUuc2F2ZWRGaWx0ZXJzLmZpbHRlcihmaWx0ZXIgPT4gZmlsdGVyLmlkICE9PSBhY3Rpb24ucGF5bG9hZClcbiAgICAgIH07XG4gICAgXG4gICAgY2FzZSAnQUREX05PVElGSUNBVElPTic6XG4gICAgICByZXR1cm4geyAuLi5zdGF0ZSwgbm90aWZpY2F0aW9uczogW2FjdGlvbi5wYXlsb2FkLCAuLi5zdGF0ZS5ub3RpZmljYXRpb25zXSB9O1xuICAgIFxuICAgIGNhc2UgJ01BUktfTk9USUZJQ0FUSU9OX1JFQUQnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIG5vdGlmaWNhdGlvbnM6IHN0YXRlLm5vdGlmaWNhdGlvbnMubWFwKG5vdGlmaWNhdGlvbiA9PlxuICAgICAgICAgIG5vdGlmaWNhdGlvbi5pZCA9PT0gYWN0aW9uLnBheWxvYWRcbiAgICAgICAgICAgID8geyAuLi5ub3RpZmljYXRpb24sIHJlYWQ6IHRydWUgfVxuICAgICAgICAgICAgOiBub3RpZmljYXRpb25cbiAgICAgICAgKVxuICAgICAgfTtcbiAgICBcbiAgICBjYXNlICdERUxFVEVfTk9USUZJQ0FUSU9OJzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBub3RpZmljYXRpb25zOiBzdGF0ZS5ub3RpZmljYXRpb25zLmZpbHRlcihub3RpZmljYXRpb24gPT4gbm90aWZpY2F0aW9uLmlkICE9PSBhY3Rpb24ucGF5bG9hZClcbiAgICAgIH07XG4gICAgXG4gICAgY2FzZSAnQ0xFQVJfQUxMX05PVElGSUNBVElPTlMnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIG5vdGlmaWNhdGlvbnM6IFtdXG4gICAgICB9O1xuICAgIFxuICAgIGNhc2UgJ0xPQURfU1RBVEUnOlxuICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsIC4uLmFjdGlvbi5wYXlsb2FkIH07XG4gICAgXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgfVxufVxuXG4vLyBDb250ZXh0XG5jb25zdCBBcHBDb250ZXh0ID0gY3JlYXRlQ29udGV4dDx7XG4gIHN0YXRlOiBBcHBTdGF0ZTtcbiAgZGlzcGF0Y2g6IFJlYWN0LkRpc3BhdGNoPEFwcEFjdGlvbj47XG59IHwgbnVsbD4obnVsbCk7XG5cbi8vIFByb3ZpZGVyIGNvbXBvbmVudFxuZXhwb3J0IGZ1bmN0aW9uIEFwcFByb3ZpZGVyKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0pIHtcbiAgY29uc3QgW3N0YXRlLCBkaXNwYXRjaF0gPSB1c2VSZWR1Y2VyKGFwcFJlZHVjZXIsIGluaXRpYWxTdGF0ZSk7XG5cbiAgLy8gTG9hZCBwcm9kdWN0cyBvbiBtb3VudFxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGxvYWRQcm9kdWN0cyA9IGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvcHJvZHVjdHMnKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFRyYW5zZm9ybSBKU09OIGRhdGEgdG8gbWF0Y2ggb3VyIGFwcGxpY2F0aW9uIHN0cnVjdHVyZVxuICAgICAgICBjb25zdCBwcm9kdWN0czogUHJvZHVjdFtdID0gZGF0YS5wcm9kdWN0cy5tYXAoKHByb2R1Y3Q6IGFueSkgPT4gKHtcbiAgICAgICAgICBpZDogYHByb2R1Y3QtJHtwcm9kdWN0LmlkfWAsXG4gICAgICAgICAgdGl0bGU6IHByb2R1Y3QudGl0bGUgfHwgJycsXG4gICAgICAgICAgcmVnaW9uOiBwcm9kdWN0LnJlZ2lvbiB8fCAnJyxcbiAgICAgICAgICBtYXRlcmlhbDogcHJvZHVjdC5tYXRlcmlhbCB8fCAnJyxcbiAgICAgICAgICBjYXRlZ29yeTogcHJvZHVjdC5jYXRlZ29yeSB8fCAnJyxcbiAgICAgICAgICBwcmljZTogYCR7cHJvZHVjdC5wcmljZX1rci8ke3Byb2R1Y3QudW5pdH1gLFxuICAgICAgICAgIHVuaXQ6IHByb2R1Y3QudW5pdCB8fCAnJyxcbiAgICAgICAgICBjb25kaXRpb246IHByb2R1Y3QuY29uZGl0aW9uIHx8ICcnLFxuICAgICAgICAgIGltYWdlOiBwcm9kdWN0LmltYWdlIHx8ICcnLFxuICAgICAgICAgIHN1cHBsaWVyOiBwcm9kdWN0LnN1cHBsaWVyIHx8ICcnLFxuICAgICAgICAgIHdlaWdodDogYCR7TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNSkgKyAwLjV9IHRvbm5gLFxuICAgICAgICAgIHRoaWNrbmVzczogYCR7TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjApICsgNX1tbWAsXG4gICAgICAgICAgbGVuZ3RoOiBgJHtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwKSArIDUwMH0gbW1gLFxuICAgICAgICAgIHdpZHRoOiBgJHtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAzMDApICsgMTAwfSBtbWAsXG4gICAgICAgICAgYXZhaWxhYmlsaXR5OiBgJHtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyMDApICsgNTB9ICR7cHJvZHVjdC51bml0fSB0aWxnamVuZ2VsaWdgLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBgR2plbmJydWt0ICR7cHJvZHVjdC5jYXRlZ29yeT8udG9Mb3dlckNhc2UoKSB8fCAnbWF0ZXJpYWxlJ30gZnJhIG9tYnJ1a3NhbmxlZ2cgaSAke3Byb2R1Y3QucmVnaW9uIHx8ICdOb3JnZSd9LiAke3Byb2R1Y3QuY29uZGl0aW9uIHx8ICdCcnVrdCd9LiBNYXRlcmlhbGV0IGVyIHBlcmZla3QgZm9yIGLDpnJla3JhZnRpZ2UgYnlnZ2Vwcm9zamVrdGVyLmAsXG4gICAgICAgICAgb3JpZ2luOiBgRnJhICR7cHJvZHVjdC5zdXBwbGllciB8fCAnTG9rYWwgbGV2ZXJhbmTDuHInfSAtICR7cHJvZHVjdC5jb25kaXRpb24gfHwgJ0JydWt0J31gXG4gICAgICAgIH0pKTtcbiAgICAgICAgXG4gICAgICAgIGRpc3BhdGNoKHsgdHlwZTogJ1NFVF9QUk9EVUNUUycsIHBheWxvYWQ6IHByb2R1Y3RzIH0pO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgbG9hZGluZyBwcm9kdWN0czonLCBlcnJvcik7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGxvYWRQcm9kdWN0cygpO1xuICB9LCBbXSk7XG5cbiAgLy8gTG9hZCBzdGF0ZSBmcm9tIGxvY2FsU3RvcmFnZSBvbiBtb3VudFxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc3Qgc2F2ZWRTdGF0ZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdieWdnT21fc3RhdGUnKTtcbiAgICAgIGlmIChzYXZlZFN0YXRlKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29uc3QgcGFyc2VkU3RhdGUgPSBKU09OLnBhcnNlKHNhdmVkU3RhdGUpO1xuICAgICAgICAgIC8vIENvbnZlcnQgYXJyYXlzIGJhY2sgdG8gU2V0cyBmb3IgZmlsdGVyc1xuICAgICAgICAgIGlmIChwYXJzZWRTdGF0ZS5hY3RpdmVGaWx0ZXJzKSB7XG4gICAgICAgICAgICBwYXJzZWRTdGF0ZS5hY3RpdmVGaWx0ZXJzID0gbmV3IFNldChwYXJzZWRTdGF0ZS5hY3RpdmVGaWx0ZXJzKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZGlzcGF0Y2goeyB0eXBlOiAnTE9BRF9TVEFURScsIHBheWxvYWQ6IHBhcnNlZFN0YXRlIH0pO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGxvYWRpbmcgc2F2ZWQgc3RhdGU6JywgZXJyb3IpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LCBbXSk7XG5cbiAgLy8gU2F2ZSBzdGF0ZSB0byBsb2NhbFN0b3JhZ2Ugd2hlbmV2ZXIgaXQgY2hhbmdlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc3Qgc3RhdGVUb1NhdmUgPSB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBhY3RpdmVGaWx0ZXJzOiBBcnJheS5mcm9tKHN0YXRlLmFjdGl2ZUZpbHRlcnMpXG4gICAgICB9O1xuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2J5Z2dPbV9zdGF0ZScsIEpTT04uc3RyaW5naWZ5KHN0YXRlVG9TYXZlKSk7XG4gICAgfVxuICB9LCBbc3RhdGVdKTtcblxuICByZXR1cm4gKFxuICAgIDxBcHBDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IHN0YXRlLCBkaXNwYXRjaCB9fT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0FwcENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59XG5cbi8vIEhvb2sgdG8gdXNlIHRoZSBjb250ZXh0XG5leHBvcnQgZnVuY3Rpb24gdXNlQXBwQ29udGV4dCgpIHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoQXBwQ29udGV4dCk7XG4gIGlmICghY29udGV4dCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXNlQXBwQ29udGV4dCBtdXN0IGJlIHVzZWQgd2l0aGluIGFuIEFwcFByb3ZpZGVyJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnRleHQ7XG59XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsInVzZVJlZHVjZXIiLCJ1c2VFZmZlY3QiLCJpbml0aWFsU3RhdGUiLCJjdXJyZW50UGFnZSIsImFjdGl2ZUZpbHRlcnMiLCJTZXQiLCJwcm9kdWN0cyIsImZpbHRlcmVkUHJvZHVjdHMiLCJiYXNrZXQiLCJtZXNzYWdlcyIsInJlY2VpcHRzIiwib3JkZXJzIiwic2F2ZWRGaWx0ZXJzIiwibm90aWZpY2F0aW9ucyIsImFwcFJlZHVjZXIiLCJzdGF0ZSIsImFjdGlvbiIsInR5cGUiLCJwYXlsb2FkIiwibmV3RmlsdGVycyIsImFkZCIsInVwZGF0ZWRGaWx0ZXJzIiwiZGVsZXRlIiwiZXhpc3RpbmdJdGVtIiwiZmluZCIsIml0ZW0iLCJ0aXRsZSIsIm1hcCIsImlkIiwicXVhbnRpdHkiLCJmaWx0ZXIiLCJtc2ciLCJvcmRlciIsInN0YXR1cyIsInVwZGF0ZXMiLCJub3RpZmljYXRpb24iLCJyZWFkIiwiQXBwQ29udGV4dCIsIkFwcFByb3ZpZGVyIiwiY2hpbGRyZW4iLCJkaXNwYXRjaCIsImxvYWRQcm9kdWN0cyIsInJlc3BvbnNlIiwiZmV0Y2giLCJkYXRhIiwianNvbiIsInByb2R1Y3QiLCJyZWdpb24iLCJtYXRlcmlhbCIsImNhdGVnb3J5IiwicHJpY2UiLCJ1bml0IiwiY29uZGl0aW9uIiwiaW1hZ2UiLCJzdXBwbGllciIsIndlaWdodCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInRoaWNrbmVzcyIsImxlbmd0aCIsIndpZHRoIiwiYXZhaWxhYmlsaXR5IiwiZGVzY3JpcHRpb24iLCJ0b0xvd2VyQ2FzZSIsIm9yaWdpbiIsImVycm9yIiwiY29uc29sZSIsInNhdmVkU3RhdGUiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwicGFyc2VkU3RhdGUiLCJKU09OIiwicGFyc2UiLCJzdGF0ZVRvU2F2ZSIsIkFycmF5IiwiZnJvbSIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJQcm92aWRlciIsInZhbHVlIiwidXNlQXBwQ29udGV4dCIsImNvbnRleHQiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/AppContext.tsx\n"));

/***/ })

});